- name: Setuping the catalogue server
  hosts: Catalogue
  become: yes
  tasks:
  - name: Disabling the old and enabling new nodejs 18
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y

  - name: Installing the nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: Adding the roboshop user
    ansible.builtin.user:
      name: roboshop

  - name: delete the old data if exist
    ansible.builtin.file:
      path: /app
      state: absent

  - name: Creating the folder
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Downloading the file
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/catalogue.zip
      dest: /tmp

  - name: Unarchiving the files
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: Installing the packages from files
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: set up the catalogue service
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: loading the service
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: set up the mongodb repo
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: Installing the mongodb
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present

  - name: checking the data in the mongodb
    ansible.builtin.command: mongo --host Mongodb.jagadish.online --quiet --eval 'db = db.getSiblingDB("catalogue"); db.products.count()'
    register: output

  - name: Loading the schema
    ansible.builtin.command: mongo --host Mongodb.jagadish.online < /app/schema/catalogue.js
    when: output.stdout == 0

  - name: enable and start the catalogue service
    ansible.builtin.service:
      name: catalogue
      state: started
      enabled: yes
