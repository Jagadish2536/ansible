- name: setup the user server
  hosts: User
  become: yes
  tasks:
  - name: disbale old with new nodejs
    ansible.builtin.shell: dnf module disable nodejs -y ; dnf module enable nodejs:18 -y

  - name: Installing the nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: adding the roboshop user
    ansible.builtin.user:
      name: roboshop

  - name: delete the old data if exist
    ansible.builtin.file:
      path: /app
      state: absent

  - name: creating the directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: downloading the data
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/user.zip
      dest: /tmp/user.zip

  - name: unarchive the files
    ansible.builtin.unarchive:
      src: /tmp/user.zip
      dest: /tmp
      remote_src: yes

  - name: install dependies
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: setup the user service
    ansible.builtin.copy:
      src: user.service
      dest: /etc/systemd/system/user.service

  - name: reload the all services
    ansible.builtin.systemd_service:
      daemon_reload: true

  - name: set up the mongodb repo
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: Installing the mongodb
    ansible.builtin.package:
      name: mongodb-org-shell
      state: present

  - name: checking the data in the mongodb
    ansible.builtin.command: mongo --host Mongodb.jagadish.online --quiet --eval 'db = db.getSiblingDB("users"); db.users.count()'
    register: output

  - name: Loading the schema
    ansible.builtin.command: mongo --host Mongodb.jagadish.online < /app/schema/user.js
    when: output.stdout == "0"

  - name: enable and start the catalogue service
    ansible.builtin.service:
      name: user
      state: started
      enabled: yes


  